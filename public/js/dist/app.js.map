{
  "version": 3,
  "sources": ["../src/shared/nav.ustils.ts", "../src/admin/admin.nav.ts", "../src/app/nav.ts", "../src/app/myCodes.ts", "../src/app.ts"],
  "sourcesContent": ["export interface ICloseIfOutsideClick {\n  element: HTMLElement;\n  elementButton: HTMLElement;\n  event: MouseEvent;\n  onClose?: () => void;\n}\n\nexport const closeIfOutsideClick = ({\n  element,\n  elementButton,\n  event,\n  onClose,\n}: ICloseIfOutsideClick) => {\n  const isClickInside =\n    element.contains(event.target as HTMLElement) ||\n    element === event.target ||\n    elementButton.contains(event.target as HTMLElement) ||\n    elementButton === event.target;\n  if (!isClickInside && !element.classList.contains(\"hidden\")) {\n    element.classList.add(\"hidden\");\n    onClose && onClose();\n  }\n};\n\nexport const toggleMenu = (menuContainer: HTMLElement | null) => {\n  if (!menuContainer) return;\n  if (menuContainer.classList.contains(\"hidden\")) {\n    menuContainer.setAttribute(\"open\", \"true\");\n  } else {\n    menuContainer.removeAttribute(\"open\");\n  }\n  menuContainer.classList.toggle(\"hidden\");\n};\n", "import { closeIfOutsideClick, toggleMenu } from \"../shared/nav.ustils\";\n\nexport default function initAdminNav() {\n  const adminMenuDropdown = document.getElementById(\"admin-menu-dropdown\");\n  const adminMenuButton = document.getElementById(\"admin-menu-button\");\n\n  const toggleAdminMenu = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    toggleMenu(adminMenuDropdown);\n  };\n\n  adminMenuButton?.addEventListener(\"click\", toggleAdminMenu);\n\n  document.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    if (adminMenuDropdown && adminMenuButton) {\n      closeIfOutsideClick({\n        element: adminMenuDropdown,\n        elementButton: adminMenuButton,\n        event,\n      });\n    }\n  });\n}\n", "import { closeIfOutsideClick, toggleMenu } from \"../shared/nav.ustils\";\n\nexport default function initNav() {\n  const mobileMenuContainer = document.getElementById(\"mobile-menu-container\");\n  const mobileMenuButton = document.getElementById(\"mobile-menu-button\");\n  const mobileMenuButtonIconClosed = document.getElementById(\n    \"mobile-menu-button-icon-closed\"\n  );\n  const mobileMenuButtonIconOpen = document.getElementById(\n    \"mobile-menu-button-icon-open\"\n  );\n\n  const toggleMobileMenuButtonIcon = () => {\n    mobileMenuButtonIconClosed?.classList.toggle(\"hidden\");\n    mobileMenuButtonIconOpen?.classList.toggle(\"hidden\");\n  };\n\n  const toggleMobileMenu = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    toggleMenu(mobileMenuContainer);\n    toggleMobileMenuButtonIcon();\n  };\n\n  mobileMenuButton?.addEventListener(\"click\", toggleMobileMenu);\n  document.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    if (mobileMenuContainer && mobileMenuButton) {\n      closeIfOutsideClick({\n        event,\n        element: mobileMenuContainer,\n        elementButton: mobileMenuButton,\n        onClose: toggleMobileMenuButtonIcon,\n      });\n    }\n  });\n}\n", "const copyCode = async (code: string) => {\n  try {\n    await navigator.clipboard.writeText(code);\n  } catch (err) {\n    console.error(\"Failed to copy: \", err);\n  }\n};\n\nexport default function initMycodes() {\n  const codesList = document.getElementById(\"mycodes-code-list\");\n  if (!codesList) {\n    return;\n  }\n\n  codesList.addEventListener(\"click\", async (evt) => {\n    let target = evt.target as HTMLElement | null | undefined;\n\n    if (!target || target.tagName === \"UL\") return;\n\n    while (target?.tagName !== \"LI\") {\n      target = target?.parentElement;\n    }\n\n    const code = target.id;\n    await copyCode(code);\n    const toast = document.getElementById(`mycodes-copied-label-${code}`);\n    if (toast) {\n      toast.classList.remove(\"hidden\");\n      setTimeout(() => {\n        toast.classList.add(\"hidden\");\n      }, 1500);\n    }\n  });\n}\n", "import initAdminNav from \"./admin/admin.nav\";\nimport initNav from \"./app/nav\";\nimport initMycodes from \"./app/myCodes\";\n\ninitMycodes();\ninitAdminNav();\ninitNav();\n"],
  "mappings": "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",
  "names": []
}
