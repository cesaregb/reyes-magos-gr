{
  "version": 3,
  "sources": ["../src/shared/nav.ustils.ts", "../src/admin/admin.nav.ts", "../src/admin/codes.ts", "../src/admin.ts"],
  "sourcesContent": ["export interface ICloseIfOutsideClick {\n  element: HTMLElement;\n  elementButton: HTMLElement;\n  event: MouseEvent;\n  onClose?: () => void;\n}\n\nexport const closeIfOutsideClick = ({\n  element,\n  elementButton,\n  event,\n  onClose,\n}: ICloseIfOutsideClick) => {\n  const isClickInside =\n    element.contains(event.target as HTMLElement) ||\n    element === event.target ||\n    elementButton.contains(event.target as HTMLElement) ||\n    elementButton === event.target;\n  if (!isClickInside) {\n    element.classList.add(\"hidden\");\n    onClose && onClose();\n  }\n};\n\nexport const toggleMenu = (menuContainer: HTMLElement | null) => {\n  if (!menuContainer) return;\n  if (menuContainer.classList.contains(\"hidden\")) {\n    menuContainer.setAttribute(\"open\", \"true\");\n  } else {\n    menuContainer.removeAttribute(\"open\");\n  }\n  menuContainer.classList.toggle(\"hidden\");\n};\n", "import { closeIfOutsideClick, toggleMenu } from \"../shared/nav.ustils\";\n\nexport default function initAdminNav() {\n  const adminMenuDropdown = document.getElementById(\"admin-menu-dropdown\");\n  const adminMenuButton = document.getElementById(\"admin-menu-button\");\n\n  const toggleAdminMenu = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    toggleMenu(adminMenuDropdown);\n  };\n\n  adminMenuButton?.addEventListener(\"click\", toggleAdminMenu);\n\n  document.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    if (adminMenuDropdown && adminMenuButton) {\n      closeIfOutsideClick({\n        element: adminMenuDropdown,\n        elementButton: adminMenuButton,\n        event,\n      });\n    }\n  });\n}\n", "export default function initCodes() {\n  const form = document.getElementById(\"remove_code_form\");\n\n  // This is done because of the styling on the checkbox there a styled input and a hidden checkbox input\n  form?.addEventListener(\"change\", (e) => {\n    const target = e.target as HTMLInputElement;\n    if (target.name === \"volunteer_code_ids\") {\n      const codeCheckbox = target.nextElementSibling as HTMLInputElement;\n      codeCheckbox.checked = target.checked;\n    }\n  });\n}\n", "import initAdminNav from \"./admin/admin.nav\";\nimport initCodes from \"./admin/codes\";\n\ninitAdminNav();\ninitCodes();\n"],
  "mappings": ";AAOO,IAAM,sBAAsB,CAAC;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA4B;AAC1B,QAAM,gBACJ,QAAQ,SAAS,MAAM,MAAqB,KAC5C,YAAY,MAAM,UAClB,cAAc,SAAS,MAAM,MAAqB,KAClD,kBAAkB,MAAM;AAC1B,MAAI,CAAC,eAAe;AAClB,YAAQ,UAAU,IAAI,QAAQ;AAC9B,eAAW,QAAQ;AAAA,EACrB;AACF;AAEO,IAAM,aAAa,CAAC,kBAAsC;AAC/D,MAAI,CAAC;AAAe;AACpB,MAAI,cAAc,UAAU,SAAS,QAAQ,GAAG;AAC9C,kBAAc,aAAa,QAAQ,MAAM;AAAA,EAC3C,OAAO;AACL,kBAAc,gBAAgB,MAAM;AAAA,EACtC;AACA,gBAAc,UAAU,OAAO,QAAQ;AACzC;;;AC9Be,SAAR,eAAgC;AACrC,QAAM,oBAAoB,SAAS,eAAe,qBAAqB;AACvE,QAAM,kBAAkB,SAAS,eAAe,mBAAmB;AAEnE,QAAM,kBAAkB,CAAC,QAAoB;AAC3C,QAAI,gBAAgB;AACpB,eAAW,iBAAiB;AAAA,EAC9B;AAEA,mBAAiB,iBAAiB,SAAS,eAAe;AAE1D,WAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,UAAM,gBAAgB;AACtB,QAAI,qBAAqB,iBAAiB;AACxC,0BAAoB;AAAA,QAClB,SAAS;AAAA,QACT,eAAe;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;ACvBe,SAAR,YAA6B;AAClC,QAAM,OAAO,SAAS,eAAe,kBAAkB;AAGvD,QAAM,iBAAiB,UAAU,CAAC,MAAM;AACtC,UAAM,SAAS,EAAE;AACjB,QAAI,OAAO,SAAS,sBAAsB;AACxC,YAAM,eAAe,OAAO;AAC5B,mBAAa,UAAU,OAAO;AAAA,IAChC;AAAA,EACF,CAAC;AACH;;;ACRA,aAAa;AACb,UAAU;",
  "names": []
}
