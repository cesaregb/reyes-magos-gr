{
  "version": 3,
  "sources": ["nav.ts", "app.ts"],
  "sourcesContent": ["export default function initNav() {\n  const mobileMenuContainer = document.getElementById(\"mobile-menu-container\");\n  const mobileMenuButton = document.getElementById(\"mobile-menu-button\");\n  const mobileMenuButtonIconClosed = document.getElementById(\n    \"mobile-menu-button-icon-closed\"\n  );\n  const mobileMenuButtonIconOpen = document.getElementById(\n    \"mobile-menu-button-icon-open\"\n  );\n  const toggleMobileMenu = () => {\n    if (!mobileMenuContainer) return;\n    if (mobileMenuContainer.classList.contains(\"hidden\")) {\n      mobileMenuContainer.setAttribute(\"open\", \"true\");\n    } else {\n      mobileMenuContainer.removeAttribute(\"open\");\n    }\n    mobileMenuContainer.classList.toggle(\"hidden\");\n    mobileMenuButtonIconClosed?.classList.toggle(\"hidden\");\n    mobileMenuButtonIconOpen?.classList.toggle(\"hidden\");\n  };\n  mobileMenuButton?.addEventListener(\"click\", toggleMobileMenu);\n\n  const adminMenuDropdown = document.getElementById(\"admin-menu-dropdown\");\n  const adminMenuButton = document.getElementById(\"admin-menu-button\");\n\n  const toggleAdminMenu = () => {\n    if (!adminMenuDropdown) return;\n    if (adminMenuDropdown.classList.contains(\"hidden\")) {\n      adminMenuDropdown.setAttribute(\"open\", \"true\");\n    } else {\n      adminMenuDropdown.removeAttribute(\"open\");\n    }\n    adminMenuDropdown.classList.toggle(\"hidden\");\n  };\n\n  adminMenuButton?.addEventListener(\"click\", toggleAdminMenu);\n\n  const closeIfOutsideClick = ({\n    element,\n    elementButton,\n    event,\n  }: {\n    element: HTMLElement;\n    elementButton: HTMLElement;\n    event: MouseEvent;\n  }) => {\n    const isClickInside =\n      element.contains(event.currentTarget as HTMLElement) ||\n      elementButton.contains(event.currentTarget as HTMLElement);\n    if (!isClickInside) {\n      element.classList.add(\"hidden\");\n    }\n  };\n\n  document.addEventListener(\"click\", (event) => {\n    if (adminMenuDropdown && adminMenuButton) {\n      closeIfOutsideClick({\n        element: adminMenuDropdown,\n        elementButton: adminMenuButton,\n        event: event,\n      });\n    }\n    if (mobileMenuContainer && mobileMenuButton) {\n      closeIfOutsideClick({\n        element: mobileMenuContainer,\n        elementButton: mobileMenuButton,\n        event: event,\n      });\n    }\n  });\n}\n", "import initNav from \"./nav\";\n\ninitNav();\n"],
  "mappings": ";AAAe,SAAR,UAA2B;AAChC,QAAM,sBAAsB,SAAS,eAAe,uBAAuB;AAC3E,QAAM,mBAAmB,SAAS,eAAe,oBAAoB;AACrE,QAAM,6BAA6B,SAAS;AAAA,IAC1C;AAAA,EACF;AACA,QAAM,2BAA2B,SAAS;AAAA,IACxC;AAAA,EACF;AACA,QAAM,mBAAmB,MAAM;AAC7B,QAAI,CAAC;AAAqB;AAC1B,QAAI,oBAAoB,UAAU,SAAS,QAAQ,GAAG;AACpD,0BAAoB,aAAa,QAAQ,MAAM;AAAA,IACjD,OAAO;AACL,0BAAoB,gBAAgB,MAAM;AAAA,IAC5C;AACA,wBAAoB,UAAU,OAAO,QAAQ;AAC7C,gCAA4B,UAAU,OAAO,QAAQ;AACrD,8BAA0B,UAAU,OAAO,QAAQ;AAAA,EACrD;AACA,oBAAkB,iBAAiB,SAAS,gBAAgB;AAE5D,QAAM,oBAAoB,SAAS,eAAe,qBAAqB;AACvE,QAAM,kBAAkB,SAAS,eAAe,mBAAmB;AAEnE,QAAM,kBAAkB,MAAM;AAC5B,QAAI,CAAC;AAAmB;AACxB,QAAI,kBAAkB,UAAU,SAAS,QAAQ,GAAG;AAClD,wBAAkB,aAAa,QAAQ,MAAM;AAAA,IAC/C,OAAO;AACL,wBAAkB,gBAAgB,MAAM;AAAA,IAC1C;AACA,sBAAkB,UAAU,OAAO,QAAQ;AAAA,EAC7C;AAEA,mBAAiB,iBAAiB,SAAS,eAAe;AAE1D,QAAM,sBAAsB,CAAC;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAIM;AACJ,UAAM,gBACJ,QAAQ,SAAS,MAAM,aAA4B,KACnD,cAAc,SAAS,MAAM,aAA4B;AAC3D,QAAI,CAAC,eAAe;AAClB,cAAQ,UAAU,IAAI,QAAQ;AAAA,IAChC;AAAA,EACF;AAEA,WAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,QAAI,qBAAqB,iBAAiB;AACxC,0BAAoB;AAAA,QAClB,SAAS;AAAA,QACT,eAAe;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,uBAAuB,kBAAkB;AAC3C,0BAAoB;AAAA,QAClB,SAAS;AAAA,QACT,eAAe;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;;;ACpEA,QAAQ;",
  "names": []
}
